/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    input greenbutton,
    input whitebutton,
    input startbutton,
    output reg green,
    output reg red,
    output reg [7:0] p1_seg,
    output reg [7:0] p2_seg,
    output reg [1:0] p1_sel,
    output reg [1:0] p2_sel,
    output reg [7:0] rounds_seg,
    output reg [1:0] rounds_sel
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  
  wire [1-1:0] M_start_cond_out;
  reg [1-1:0] M_start_cond_in;
  button_conditioner_2 start_cond (
    .clk(clk),
    .in(M_start_cond_in),
    .out(M_start_cond_out)
  );
  
  wire [1-1:0] M_edge_startbutton_out;
  reg [1-1:0] M_edge_startbutton_in;
  edge_detector_3 edge_startbutton (
    .clk(clk),
    .in(M_edge_startbutton_in),
    .out(M_edge_startbutton_out)
  );
  
  wire [1-1:0] M_greencond_out;
  reg [1-1:0] M_greencond_in;
  button_conditioner_2 greencond (
    .clk(clk),
    .in(M_greencond_in),
    .out(M_greencond_out)
  );
  
  wire [1-1:0] M_edge_greenbutton_out;
  reg [1-1:0] M_edge_greenbutton_in;
  edge_detector_3 edge_greenbutton (
    .clk(clk),
    .in(M_edge_greenbutton_in),
    .out(M_edge_greenbutton_out)
  );
  
  wire [1-1:0] M_whitecond_out;
  reg [1-1:0] M_whitecond_in;
  button_conditioner_2 whitecond (
    .clk(clk),
    .in(M_whitecond_in),
    .out(M_whitecond_out)
  );
  
  wire [1-1:0] M_edge_whitebutton_out;
  reg [1-1:0] M_edge_whitebutton_in;
  edge_detector_3 edge_whitebutton (
    .clk(clk),
    .in(M_edge_whitebutton_in),
    .out(M_edge_whitebutton_out)
  );
  
  wire [1-1:0] M_slowClockEdge_out;
  reg [1-1:0] M_slowClockEdge_in;
  edge_detector_3 slowClockEdge (
    .clk(clk),
    .in(M_slowClockEdge_in),
    .out(M_slowClockEdge_out)
  );
  
  wire [1-1:0] M_slowClock_value;
  counter_4 slowClock (
    .clk(clk),
    .rst(rst),
    .value(M_slowClock_value)
  );
  
  wire [8-1:0] M_game_beta_p1_seg;
  wire [8-1:0] M_game_beta_p2_seg;
  wire [8-1:0] M_game_beta_rounds_seg;
  wire [2-1:0] M_game_beta_p1_sel;
  wire [2-1:0] M_game_beta_p2_sel;
  wire [2-1:0] M_game_beta_rounds_sel;
  wire [1-1:0] M_game_beta_green;
  wire [1-1:0] M_game_beta_red;
  reg [1-1:0] M_game_beta_whitebutton;
  reg [1-1:0] M_game_beta_greenbutton;
  reg [1-1:0] M_game_beta_startbutton;
  game_miniBeta_5 game_beta (
    .clk(clk),
    .rst(rst),
    .whitebutton(M_game_beta_whitebutton),
    .greenbutton(M_game_beta_greenbutton),
    .startbutton(M_game_beta_startbutton),
    .p1_seg(M_game_beta_p1_seg),
    .p2_seg(M_game_beta_p2_seg),
    .rounds_seg(M_game_beta_rounds_seg),
    .p1_sel(M_game_beta_p1_sel),
    .p2_sel(M_game_beta_p2_sel),
    .rounds_sel(M_game_beta_rounds_sel),
    .green(M_game_beta_green),
    .red(M_game_beta_red)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    M_slowClockEdge_in = M_slowClock_value;
    M_start_cond_in = startbutton;
    M_edge_startbutton_in = M_start_cond_out;
    M_game_beta_startbutton = M_edge_startbutton_out;
    M_greencond_in = greenbutton;
    M_edge_greenbutton_in = M_greencond_out;
    M_game_beta_greenbutton = M_edge_greenbutton_out;
    M_whitecond_in = whitebutton;
    M_edge_whitebutton_in = M_whitecond_out;
    M_game_beta_whitebutton = M_edge_whitebutton_out;
    usb_tx = usb_rx;
    led = 8'h00;
    green = M_game_beta_green;
    red = M_game_beta_red;
    p1_seg = ~M_game_beta_p1_seg;
    p1_sel = ~M_game_beta_p1_sel;
    p2_seg = ~M_game_beta_p2_seg;
    p2_sel = ~M_game_beta_p2_sel;
    rounds_seg = ~M_game_beta_rounds_seg;
    rounds_sel = ~M_game_beta_rounds_sel;
  end
endmodule
